"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/lib/components/navbar.tsx":
/*!*******************************************!*\
  !*** ./src/app/lib/components/navbar.tsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Navbar: () => (/* binding */ Navbar)\n/* harmony export */ });\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* __next_internal_client_entry_do_not_use__ Navbar auto */ var _s = $RefreshSig$();\n\nconst Navbar = (param)=>{\n    let { children, href, name = 'has-background-success', className } = param;\n    _s();\n    const path = (0,next_navigation__WEBPACK_IMPORTED_MODULE_0__.usePathname)();\n} // return <>\n //     <nav className=\"has-background-dark\tp-5 has-text-white-ter\">\n //         <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n //             <div className=\"navbar-start\">\n //                 <Link href='/' className=\"navbar-item\">\n //                     Signup\n //                 </Link>\n //                 <Link href='/login' className=\"navbar-item\">\n //                    Login\n //                 </Link>\n //             </div>\n //         </div>\n //     </nav>\n // </>\n;\n_s(Navbar, \"kx72sda92+XlSh1QiZvq/YVQxpY=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_0__.usePathname\n    ];\n});\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvbGliL2NvbXBvbmVudHMvbmF2YmFyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFFNkM7QUFVdEMsTUFBTUMsU0FBUztRQUFDLEVBQUNDLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxPQUFLLHdCQUF3QixFQUFFQyxTQUFTLEVBQU87O0lBQ25GLE1BQU1DLE9BQU9OLDREQUFXQTtBQUM1QixFQUlJLFlBQVk7Q0FDWixtRUFBbUU7Q0FDbkUsZ0VBQWdFO0NBQ2hFLDZDQUE2QztDQUM3QywwREFBMEQ7Q0FDMUQsNkJBQTZCO0NBQzdCLDBCQUEwQjtDQUMxQiwrREFBK0Q7Q0FDL0QsMkJBQTJCO0NBQzNCLDBCQUEwQjtDQUMxQixxQkFBcUI7Q0FDckIsaUJBQWlCO0NBQ2pCLGFBQWE7Q0FDYixNQUFNO0NBakJUO0dBRllDOztRQUNJRCx3REFBV0E7OztLQURmQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBwL2xpYi9jb21wb25lbnRzL25hdmJhci50c3g/OWMwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiXG5pbXBvcnQgeyB1c2VQYXRobmFtZSB9IGZyb20gXCJuZXh0L25hdmlnYXRpb25cIlxuXG5cbmludGVyZmFjZSBQcm9wc3tcbiAgICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlXG4gICAgaHJlZjpzdHJpbmdcbiAgICBuYW1lPzpzdHJpbmdcbiAgICBjbGFzc05hbWU/OnN0cmluZ1xufVxuXG5leHBvcnQgY29uc3QgTmF2YmFyID0gKHtjaGlsZHJlbiwgaHJlZiwgbmFtZT0naGFzLWJhY2tncm91bmQtc3VjY2VzcycsIGNsYXNzTmFtZX06UHJvcHMpID0+IHtcbiAgICBjb25zdCBwYXRoID0gdXNlUGF0aG5hbWUoKVxufVxuXG5cblxuICAgIC8vIHJldHVybiA8PlxuICAgIC8vICAgICA8bmF2IGNsYXNzTmFtZT1cImhhcy1iYWNrZ3JvdW5kLWRhcmtcdHAtNSBoYXMtdGV4dC13aGl0ZS10ZXJcIj5cbiAgICAvLyAgICAgICAgIDxkaXYgaWQ9XCJuYXZiYXJCYXNpY0V4YW1wbGVcIiBjbGFzc05hbWU9XCJuYXZiYXItbWVudVwiPlxuICAgIC8vICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmF2YmFyLXN0YXJ0XCI+XG4gICAgLy8gICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9Jy8nIGNsYXNzTmFtZT1cIm5hdmJhci1pdGVtXCI+XG4gICAgLy8gICAgICAgICAgICAgICAgICAgICBTaWdudXBcbiAgICAvLyAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgIC8vICAgICAgICAgICAgICAgICA8TGluayBocmVmPScvbG9naW4nIGNsYXNzTmFtZT1cIm5hdmJhci1pdGVtXCI+XG4gICAgLy8gICAgICAgICAgICAgICAgICAgIExvZ2luXG4gICAgLy8gICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAvLyAgICAgICAgICAgICA8L2Rpdj5cbiAgICAvLyAgICAgICAgIDwvZGl2PlxuICAgIC8vICAgICA8L25hdj5cbiAgICAvLyA8Lz4iXSwibmFtZXMiOlsidXNlUGF0aG5hbWUiLCJOYXZiYXIiLCJjaGlsZHJlbiIsImhyZWYiLCJuYW1lIiwiY2xhc3NOYW1lIiwicGF0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/lib/components/navbar.tsx\n"));

/***/ })

});